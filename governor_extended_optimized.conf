# OPTIMIERTE GOVERNOR EXTENDED CONFIGURATION
# Für wissenschaftlich korrekte 6-7-Argument Fakten

[engine]
# Wechsel zu DeepSeek für bessere Qualität
llm_provider = deepseek  # Vorher: groq
model = deepseek-r1  # Wissenschaftlich präziser
temperature = 0.1  # Sehr niedrig für Faktentreue (vorher: 0.7)
max_tokens = 150  # Genug für komplexe Fakten

[generation]
# Fokus auf 6-7 Argumente
min_arguments = 6  # Vorher: 3
max_arguments = 7  # Vorher: 5
arguments_preference = 7  # Bevorzuge maximale Komplexität

# Strenge Patterns verwenden
use_validated_patterns = true
pattern_source = validated_fact_patterns.py
randomize_patterns = false  # Keine zufälligen Kombinationen!

[validation]
# Verschärfte Validierung
enable_semantic_validation = true  # NEU: Prüfe Bedeutung
enable_scientific_validation = true  # NEU: Prüfe wissenschaftliche Korrektheit
enable_conservation_laws = true  # NEU: Prüfe Erhaltungssätze

# Reject-Kriterien
reject_person_physics_mix = true  # Einstein + momentum = REJECT
reject_invalid_chemistry = true  # CH4 + CO2 + NH3 = REJECT  
reject_vague_predicates = true  # "Field", "Wave", "Matrix" ohne Kontext = REJECT

# Konfidenz-Schwellen
min_confidence = 0.8  # Vorher: 0.5
min_consensus = 0.9  # Bei Multi-LLM-Validierung

[domains]
# Nur wissenschaftliche Domains
enabled_domains = [
    "CHEMISTRY",
    "PHYSICS", 
    "BIOLOGY",
    "COMPUTER_SCIENCE",
    "MATHEMATICS"
]

# Deaktiviere vage Domains
disabled_domains = [
    "GENERAL",
    "PHILOSOPHY",  # Zu vage für Fakten
    "HISTORY"  # Personen-Physics-Mix Problem
]

[quality_control]
# Batch-Validierung
batch_size = 10  # Kleinere Batches für bessere Kontrolle
validation_sample_rate = 1.0  # 100% validieren (vorher: 0.3)
auto_reject_threshold = 3  # Nach 3 Fehlern Pattern blacklisten

# Externe Validierung
use_external_validator = true
validator_llm = gpt-4  # Oder gpt-5 wenn verfügbar
cross_check_facts = true

[predicates]
# Erlaubte Prädikate (Whitelist)
allowed_predicates = [
    "ChemicalReaction",
    "MolecularStructure",
    "ElectronConfiguration",
    "ElectromagneticWave",
    "ParticleInteraction",
    "Motion",
    "ProteinSynthesis",
    "CellularRespiration",
    "FoodWeb",
    "DNAReplication",
    "TCPConnection",
    "HTTPRequest",
    "DNSQuery",
    "AlgorithmAnalysis",
    "DataStructure",
    "FunctionAnalysis",
    "MatrixOperation",
    "NumberProperty"
]

# Explizit verbotene Prädikate
banned_predicates = [
    "HasProperty",  # Zu generisch
    "Field",  # Zu vage
    "Wave",  # Zu vage
    "Matrix",  # Außer MatrixOperation
    "Compound",  # Verwende MolecularStructure
    "Element",  # Verwende ElectronConfiguration
    "DNA",  # Kein Prädikat, verwende DNAReplication
    "Organism"  # Zu vage
]

[persistence]
# Datenbank-Einstellungen
db_path = hexagonal_kb.db
table = facts_validated  # NEU: Separater Table für validierte Fakten
backup_before_insert = true
vacuum_interval = 1000  # Nach 1000 Inserts

[monitoring]
# Logging und Metriken
log_level = INFO
log_rejected_facts = true
log_validation_scores = true
metrics_endpoint = /api/governor/metrics

# Alerts
alert_on_low_quality = true
quality_threshold = 0.7
alert_email = admin@hexagonal.ai

[schedule]
# Zeitplan für Generierung
generation_interval = 300  # Alle 5 Minuten (vorher: 60)
validation_interval = 60  # Jede Minute prüfen
cleanup_interval = 3600  # Stündlich aufräumen
