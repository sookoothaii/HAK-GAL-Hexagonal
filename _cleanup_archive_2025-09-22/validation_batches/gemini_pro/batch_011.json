{
  "provider": "gemini_pro",
  "instructions": "Fokus Bio/Physik; strikte JSON-Ausgabe; max 40 Items",
  "schema": {
    "items_schema": {
      "statement": "string",
      "verdict": "correct|incorrect|uncertain",
      "reasons": "string",
      "suggested_fix": "string|null",
      "domain": "string",
      "confidence": "number"
    },
    "summary_schema": {
      "count": "number",
      "correct": "number",
      "incorrect": "number",
      "uncertain": "number",
      "acceptance_rate": "number"
    }
  },
  "samples": [
    {
      "predicate": "Enables",
      "statement": "Enables(QuantumComputing, Superposition)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(client, security)."
    },
    {
      "predicate": "StudiedBy",
      "statement": "StudiedBy(sodium, Bohr)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(TCP/IP, client)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(quark, mass, gravity)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(chlorine, hydrogen, NaCl, H2O, O2)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(catalyst, O2, molecule)."
    },
    {
      "predicate": "Theorem",
      "statement": "Theorem(Gauss, graph, derivative, integer)."
    },
    {
      "predicate": "IsA",
      "statement": "IsA(calculus, principle)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(network, API, SQL)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(H2O, hydrogen, CO2, oxygen, NaCl)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(H2O, hydrogen, NaCl, nitrogen, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(NH3, hydrogen, NaCl, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(NaCl, O2, sodium, hydrogen, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(NaCl, hydrogen, sodium, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(NaCl, oxygen, hydrogen, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(O2, hydrogen, sodium, CO2, chlorine)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(carbon, hydrogen, CH4, CO2, nitrogen)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(carbon, hydrogen, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(hydrogen, CO2, O2, chlorine)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(hydrogen, CO2, oxygen, sodium)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(hydrogen, H2O, CH4, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(hydrogen, carbon, CO2, CH4)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(hydrogen, nitrogen, CO2, NH3, carbon)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(hydrogen, oxygen, CO2, O2, NaCl)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(nitrogen, chlorine, H2O, hydrogen, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(sodium, chlorine, hydrogen, CO2)."
    },
    {
      "predicate": "Bond",
      "statement": "Bond(sodium, hydrogen, CO2)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(hydrogen, CO2)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(H2O, O2, hydrogen, CO2, sodium)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(carbon, hydrogen, sodium, chlorine, CO2)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, CH4, CO2)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, CO2, CH4, NaCl)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, CO2, H2O, CH4, sodium)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, CO2, chlorine, nitrogen, NH3)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, CO2, nitrogen)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, CO2, nitrogen, NaCl)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, CO2, sodium)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, O2, H2O, CO2)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, carbon, NH3, CO2)."
    }
  ]
}