{
  "provider": "gemini_pro",
  "instructions": "Fokus Bio/Physik; strikte JSON-Ausgabe; max 40 Items",
  "schema": {
    "items_schema": {
      "statement": "string",
      "verdict": "correct|incorrect|uncertain",
      "reasons": "string",
      "suggested_fix": "string|null",
      "domain": "string",
      "confidence": "number"
    },
    "summary_schema": {
      "count": "number",
      "correct": "number",
      "incorrect": "number",
      "uncertain": "number",
      "acceptance_rate": "number"
    }
  },
  "samples": [
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, graph, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, integer, Euler, derivative, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, integer, Gauss, Euler, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, integer, algebra)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, integer, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, integral, Euler)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, limit, Euler, integer, graph)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, limit, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, limit, integral, graph, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, limit, prime, algebra)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, prime, derivative, Euler)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, prime, graph, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, prime, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, topology, Euler, graph)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, topology, derivative)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, topology, graph, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, topology, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, topology, integer, Euler, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, topology, integral, integer, derivative)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, topology, limit, prime, Euler)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, Euler, integral, integer, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, Euler, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, Gauss, algebra, topology, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, Gauss, graph, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, Gauss, integer, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, Gauss, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, Gauss, prime, Euler, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, algebra, Euler, graph)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, algebra, Euler, integer, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, algebra, graph, prime, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, algebra, topology)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, calculus, Euler)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, calculus, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, calculus, integer, algebra)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, graph, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, graph, limit, algebra, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, graph, topology, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, integer, Euler, Gauss, graph)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, integer, graph, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, integer, integral, Euler)."
    }
  ]
}