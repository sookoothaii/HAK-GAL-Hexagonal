{
  "provider": "gemini_pro",
  "instructions": "Fokus Bio/Physik; strikte JSON-Ausgabe; max 40 Items",
  "schema": {
    "items_schema": {
      "statement": "string",
      "verdict": "correct|incorrect|uncertain",
      "reasons": "string",
      "suggested_fix": "string|null",
      "domain": "string",
      "confidence": "number"
    },
    "summary_schema": {
      "count": "number",
      "correct": "number",
      "incorrect": "number",
      "uncertain": "number",
      "acceptance_rate": "number"
    }
  },
  "samples": [
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(boson, energy)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(force, Newton)."
    },
    {
      "predicate": "Reaction",
      "statement": "Reaction(oxygen, chlorine, O2)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(virus, enzyme, cell)."
    },
    {
      "predicate": "Uses",
      "statement": "Uses(NaCl, hydrogen)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(carbon, hydrogen, bond)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(SQL, database, protocol)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(Euler, topology, vector)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(client, encryption, HTTP)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(enzyme, gene, mitochondria)."
    },
    {
      "predicate": "WasDevelopedBy",
      "statement": "WasDevelopedBy(chlorine, Turing)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(organ, species, ecosystem)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(mass, wave, proton)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(prime, set)."
    },
    {
      "predicate": "Force",
      "statement": "Force(proton, gravity, mass, boson)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(GraphQL, client)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(integer, proof)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(Space_Exploration, Robotics)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(MainSequenceStars, Helium)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(derivative, theorem, Gauss)."
    },
    {
      "predicate": "Energy",
      "statement": "Energy(boson, gravity, electron, velocity, photon)."
    },
    {
      "predicate": "Wave",
      "statement": "Wave(boson, proton, mass, gravity, Newton)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(Pharaohs, Gods)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(QuantumEntanglement, GHZStates)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(mitochondria, ecosystem, cell)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(enzyme, species, cell)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(nitrogen, molecule)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(calculus, derivative, integral)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(tissue, ecosystem)."
    },
    {
      "predicate": "Function",
      "statement": "Function(derivative, topology, algebra, Euler, integral)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(Society, Pharaoh)."
    },
    {
      "predicate": "Database",
      "statement": "Database(GraphQL, SQL, server, NoSQL, encryption)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(species, organ, bacteria)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(H2O, bond)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(organism, protein, DNA)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(reaction, hydrogen)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(Newton, mass, momentum)."
    },
    {
      "predicate": "Theorem",
      "statement": "Theorem(algebra, integral, topology, integer, graph)."
    },
    {
      "predicate": "System",
      "statement": "System(REST, blockchain, server)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(gene, nucleus, enzyme)."
    }
  ]
}