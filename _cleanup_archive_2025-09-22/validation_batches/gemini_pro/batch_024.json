{
  "provider": "gemini_pro",
  "instructions": "Fokus Bio/Physik; strikte JSON-Ausgabe; max 40 Items",
  "schema": {
    "items_schema": {
      "statement": "string",
      "verdict": "correct|incorrect|uncertain",
      "reasons": "string",
      "suggested_fix": "string|null",
      "domain": "string",
      "confidence": "number"
    },
    "summary_schema": {
      "count": "number",
      "correct": "number",
      "incorrect": "number",
      "uncertain": "number",
      "acceptance_rate": "number"
    }
  },
  "samples": [
    {
      "predicate": "API",
      "statement": "API(server, HTTP, NoSQL, blockchain, encryption)."
    },
    {
      "predicate": "API",
      "statement": "API(server, HTTP, TCP/IP, SQL, cloud)."
    },
    {
      "predicate": "API",
      "statement": "API(server, HTTP, TCP/IP, blockchain)."
    },
    {
      "predicate": "API",
      "statement": "API(server, NoSQL, GraphQL)."
    },
    {
      "predicate": "API",
      "statement": "API(server, NoSQL, cloud, AI)."
    },
    {
      "predicate": "API",
      "statement": "API(server, REST, GraphQL)."
    },
    {
      "predicate": "API",
      "statement": "API(server, SQL, client, REST, cloud)."
    },
    {
      "predicate": "API",
      "statement": "API(server, TCP/IP, GraphQL, HTTP, client)."
    },
    {
      "predicate": "API",
      "statement": "API(server, TCP/IP, encryption, client)."
    },
    {
      "predicate": "API",
      "statement": "API(server, client, GraphQL, cloud, SQL)."
    },
    {
      "predicate": "API",
      "statement": "API(server, client, REST, SQL)."
    },
    {
      "predicate": "API",
      "statement": "API(server, cloud, GraphQL, client, NoSQL)."
    },
    {
      "predicate": "API",
      "statement": "API(server, cloud, TCP/IP)."
    },
    {
      "predicate": "API",
      "statement": "API(server, cloud, encryption, NoSQL, GraphQL)."
    },
    {
      "predicate": "API",
      "statement": "API(server, cloud, encryption, TCP/IP)."
    },
    {
      "predicate": "API",
      "statement": "API(server, encryption, HTTP, NoSQL)."
    },
    {
      "predicate": "API",
      "statement": "API(server, encryption, REST, AI, cloud)."
    },
    {
      "predicate": "API",
      "statement": "API(server, encryption, blockchain, client)."
    },
    {
      "predicate": "AcidBase",
      "statement": "AcidBase(HCl, NaOH, NaCl, H2O, neutralization)."
    },
    {
      "predicate": "Adaptation",
      "statement": "Adaptation(Natural, selection, environmental, pressure, fitness)."
    },
    {
      "predicate": "Advertising",
      "statement": "Advertising(Campaign, reach, frequency, impact, ROI)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Dijkstra, shortest, path, graph, weighted)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, Gauss, algebra, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, Gauss, algebra, graph, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, Gauss, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, Gauss, topology, graph, algebra)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, algebra, derivative)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, algebra, integral, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, algebra, integral, prime, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, algebra, limit, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, calculus, graph, derivative)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, calculus, integral, algebra, derivative)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, calculus, prime, integral, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, derivative, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, derivative, Gauss, algebra)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, derivative, Gauss, limit, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, derivative, integral, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, graph, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, graph, derivative, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(Euler, graph, topology)."
    }
  ]
}