{
  "provider": "gemini_pro",
  "instructions": "Fokus Bio/Physik; strikte JSON-Ausgabe; max 40 Items",
  "schema": {
    "items_schema": {
      "statement": "string",
      "verdict": "correct|incorrect|uncertain",
      "reasons": "string",
      "suggested_fix": "string|null",
      "domain": "string",
      "confidence": "number"
    },
    "summary_schema": {
      "count": "number",
      "correct": "number",
      "incorrect": "number",
      "uncertain": "number",
      "acceptance_rate": "number"
    }
  },
  "samples": [
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, integral, algebra)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, integral, algebra, Euler, topology)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, integral, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, integral, topology, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, limit, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, limit, integer, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, limit, integer, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, limit, topology, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, prime, Euler, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, prime, integral, topology, algebra)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, prime, topology, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, prime, topology, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, topology, Euler)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, topology, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, topology, Gauss, graph, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, topology, Gauss, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, topology, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(derivative, topology, prime, integer, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Euler, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Euler, Gauss, limit, integer)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Euler, calculus, prime, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Euler, integer, prime, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Euler, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Euler, integral, prime, topology)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Euler, integral, topology, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Euler, prime, algebra, derivative)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, Gauss, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, algebra, integer, Euler)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, algebra, integral, integer, derivative)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, algebra, topology)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, calculus, Gauss)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, calculus, limit, topology, integral)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, derivative, Euler)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, derivative, integer, integral, calculus)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, derivative, topology, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, integer, Euler, derivative)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, integer, calculus, prime, algebra)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, integer, limit)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, integer, topology, prime)."
    },
    {
      "predicate": "Algorithm",
      "statement": "Algorithm(graph, limit, Euler, integral)."
    }
  ]
}