{
  "provider": "gemini_pro",
  "instructions": "Fokus Bio/Physik; strikte JSON-Ausgabe; max 40 Items",
  "schema": {
    "items_schema": {
      "statement": "string",
      "verdict": "correct|incorrect|uncertain",
      "reasons": "string",
      "suggested_fix": "string|null",
      "domain": "string",
      "confidence": "number"
    },
    "summary_schema": {
      "count": "number",
      "correct": "number",
      "incorrect": "number",
      "uncertain": "number",
      "acceptance_rate": "number"
    }
  },
  "samples": [
    {
      "predicate": "Causes",
      "statement": "Causes(KrebsCycle, FADHâ‚‚)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(DysfunctionalNetworks, Epilepsy)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(prime, vector)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(NoSQL, TCP/IP)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(Chromatin, CondensesIntoChromosomes)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(algorithm, GraphQL)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(molecule, oxygen)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(Einstein, force)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(ion, sodium)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(CO2, NaCl)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(framework, cloud)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(vector, function)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(NaCl, hydrogen)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(EnrichInterstellarGas, FormNewStarsAndPlanets)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(SilkRoad, ShapeEconomies)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(KantIdeas, AnalyticPhilosophy)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(Persia, Decline)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(MachineLearning, DataQuantity)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(PlateInteractions, MountainFormation)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(gravity, quark)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(security, client)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(organism, organ)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(catalyst, H2O)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(Einstein, proton)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(derivative, Gauss)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(derivative, limit)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(quark, neutron)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(function, Gauss)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(DNA, chromosome)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(chromosome, cell)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(API, network)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(MoralPhilosophy, Deontology)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(particle, Einstein)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(NeuralNetworks, Pruning)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(particle, neutron)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(particle, field)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(field, quark)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(chromosome, ribosome)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(StormingBastille, StartRevolution)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(Einstein, gravity)."
    }
  ]
}