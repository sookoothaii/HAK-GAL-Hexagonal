{
  "provider": "deepseek",
  "instructions": "Fokus Chemie/Konsistenz; knappe, präzise Gründe; nur JSON",
  "schema": {
    "items_schema": {
      "statement": "string",
      "verdict": "correct|incorrect|uncertain",
      "reasons": "string",
      "suggested_fix": "string|null",
      "domain": "string",
      "confidence": "number"
    },
    "summary_schema": {
      "count": "number",
      "correct": "number",
      "incorrect": "number",
      "uncertain": "number",
      "acceptance_rate": "number"
    }
  },
  "samples": [
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, chlorine, CO2)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, chlorine, O2, CO2, CH4)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, oxygen, CO2, carbon)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(hydrogen, oxygen, chlorine, NaCl, CO2)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(nitrogen, hydrogen, sodium, CO2, oxygen)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(oxygen, nitrogen, hydrogen, CO2)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(sodium, H2O, hydrogen, CO2, chlorine)."
    },
    {
      "predicate": "Compound",
      "statement": "Compound(sodium, hydrogen, CH4, CO2)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(hydrogen, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(CH4, hydrogen, nitrogen, CO2, carbon)."
    },
    {
      "predicate": "Element",
      "statement": "Element(H2O, hydrogen, CO2, NaCl, O2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(H2O, nitrogen, chlorine, hydrogen, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(NaCl, hydrogen, CO2, CH4)."
    },
    {
      "predicate": "Element",
      "statement": "Element(chlorine, hydrogen, CO2, O2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, CH4, CO2, sodium, nitrogen)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, CO2, O2, nitrogen, H2O)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, CO2, chlorine)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, CO2, oxygen, O2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, H2O, CO2, NH3)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, NH3, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, NH3, CO2, nitrogen, chlorine)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, NH3, nitrogen, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, O2, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, O2, chlorine, oxygen, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, chlorine, NH3, H2O, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, nitrogen, CO2, CH4)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, sodium, CO2, carbon, oxygen)."
    },
    {
      "predicate": "Element",
      "statement": "Element(hydrogen, sodium, oxygen, chlorine, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(oxygen, sodium, hydrogen, O2, CO2)."
    },
    {
      "predicate": "Element",
      "statement": "Element(sodium, chlorine, hydrogen, CO2, H2O)."
    },
    {
      "predicate": "Element",
      "statement": "Element(sodium, hydrogen, oxygen, H2O, CO2)."
    },
    {
      "predicate": "External verification by Claude Opus confirms HAK_GAL_HEXAGONAL performance optimizations with 90% success rate - query performance 0.00-0.02ms ",
      "statement": "External verification by Claude Opus confirms HAK_GAL_HEXAGONAL performance optimizations with 90% success rate - query performance 0.00-0.02ms (better than claimed <2ms), batch queries 86.3% faster (exceeding claimed 29%), all 15 indexes verified active"
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(hydrogen, CO2)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(hydrogen, CO2)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(hydrogen, CO2)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(hydrogen, CO2)."
    },
    {
      "predicate": "Molecule",
      "statement": "Molecule(NH3, hydrogen, CO2, chlorine)."
    },
    {
      "predicate": "Molecule",
      "statement": "Molecule(NH3, hydrogen, nitrogen, CO2)."
    },
    {
      "predicate": "Molecule",
      "statement": "Molecule(NaCl, CH4, hydrogen, CO2)."
    },
    {
      "predicate": "Molecule",
      "statement": "Molecule(NaCl, hydrogen, CO2, CH4, sodium)."
    }
  ]
}