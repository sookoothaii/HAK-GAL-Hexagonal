{
  "table": "facts",
  "samples": [
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(AI, protocol, GraphQL)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(RNA, bacteria, tissue)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(Euler, proof, algebra)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(chromosome, tissue, virus)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(SQL, encryption, API)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(tissue, mitochondria, DNA)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(mitochondria, ribosome, DNA)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(security, encryption, AI)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(client, SQL, database)."
    },
    {
      "predicate": "ConsistsOf",
      "statement": "ConsistsOf(ion, nitrogen, carbon)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(KulturellerAustausch, Kompass)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(CategoricalImperative, Principle2)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(cloud, NoSQL)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(NaCl, CO2)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(SilkRoad, NorthernRoute)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(AncientEgypt, Tombs)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(cloud, algorithm)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(mitochondria, enzyme)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(Literature, BookOfTheDead)."
    },
    {
      "predicate": "HasPart",
      "statement": "HasPart(HTTP, GraphQL)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(TCP/IP, GraphQL)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(PlateInteractions, Volcanoes)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(ConvergentBoundary, PlatesCollide)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(organ, protein)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(proof, limit)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(AdvancedFusion, Sulfur)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(species, nucleus)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(StickyPrices, PersistentUnemployment)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(API, TCP/IP)."
    },
    {
      "predicate": "Causes",
      "statement": "Causes(catalyst, chlorine)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(catalyst, CO2)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(HTTP, NoSQL)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(FrenchRevolution, TransformationFromMonarchyToRepublic)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(ecosystem, DNA)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(SilkRoad, NetworkOfTradeRoutes)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(bacteria, ribosome)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(SQL, network)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(StellarNucleosynthesis, Prozess)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(security, network)."
    },
    {
      "predicate": "IsDefinedAs",
      "statement": "IsDefinedAs(integer, prime)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(neutron, complex)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(NH3, polar)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(RNA, variable)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(H2O, critical)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(ecosystem, reactive)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(AdvancedFusion, CarbonZuNeonUndMagnesium)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(Gauss, static)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(BiasVarianceTradeoff, Overfitting)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(CH4, static)."
    },
    {
      "predicate": "HasProperty",
      "statement": "HasProperty(securityCryptographic, HingAndConsensus)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(reaction, bond)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(nucleus, gene)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(bacteria, organism)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(calculus, axiom)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(organ, nucleus)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(oxygen, O2)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(algorithm, database)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(protein, chromosome)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(quantum, velocity)."
    },
    {
      "predicate": "IsTypeOf",
      "statement": "IsTypeOf(integer, algebra)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(momentum, Einstein)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(quark, gravity)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(gene, bacteria)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(wave, Einstein)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(enzyme, species)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(matrix, proof)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(cloud, API)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(network, protocol)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(SpreadTechnologies, Paper)."
    },
    {
      "predicate": "IsSimilarTo",
      "statement": "IsSimilarTo(electron, velocity)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(Euler, synthesis)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(Fadh2, ElectronTransportChain)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(bond, analysis)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(ImmanuelKant, ExamineLimitsOfHumanKnowledge)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(ImmanuelKant, EmphasizeLimitsAndPossibilitiesOfHumanReason)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(hydrogen, synthesis)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(TheodosianWalls, DefensiveWars)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(encryption, transmission)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(MultiplierEffect, MagnifiedImpactOnEmployment)."
    },
    {
      "predicate": "HasPurpose",
      "statement": "HasPurpose(CommitteeOfPublicSafety, SuppressOpposition)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(database, GraphQL)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(theorem, limit)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(graph, axiom)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(set, derivative)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(Gauss, prime)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(chromosome, species)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(SQL, security)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(mitochondria, ribosome)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(blockchain, algorithm)."
    },
    {
      "predicate": "DependsOn",
      "statement": "DependsOn(CH4, NaCl)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(derivative, limit)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(calculus, integer)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(tissue, organism)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(VR, PowerfulComputer)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(cell, chromosome)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(cloud, HTTP)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(HTTP, database)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(enzyme, fungi)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(protocol, NoSQL)."
    },
    {
      "predicate": "Requires",
      "statement": "Requires(velocity, wave)."
    }
  ]
}