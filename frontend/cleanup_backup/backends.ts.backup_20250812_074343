/**
 * Backend Configuration for Dual-System Support
 * Supports switching between Original HAK-GAL and Hexagonal Architecture
 */

export interface BackendConfig {
  name: string;
  apiUrl: string;
  wsUrl: string;
  port: number;
  type: 'original' | 'hexagonal';
  features: {
    websocket: boolean;
    governor: boolean;
    autoLearning: boolean;
    neuralReasoning: boolean;
  };
}

// Backend Configurations
export const BACKENDS: Record<string, BackendConfig> = {
  original: {
    name: 'HAK-GAL Original',
    apiUrl: 'http://localhost:5000',
    wsUrl: 'http://localhost:5000',
    port: 5000,
    type: 'original',
    features: {
      websocket: true,
      governor: true,
      autoLearning: true,
      neuralReasoning: true
    }
  },
  hexagonal: {
    name: 'HAK-GAL Hexagonal',
    apiUrl: 'http://localhost:5001',
    wsUrl: 'http://localhost:5001',
    port: 5001,
    type: 'hexagonal',
    features: {
      websocket: true, // Now implemented in Enhanced Version
      governor: true,  // Governor Adapter working
      autoLearning: false, // Still needs Engine integration
      neuralReasoning: true
    }
  }
};

// Get active backend from localStorage or default
export const getActiveBackend = (): BackendConfig => {
  const savedBackend = localStorage.getItem('activeBackend');
  return BACKENDS[savedBackend || 'original'] || BACKENDS.original;
};

// Set active backend
export const setActiveBackend = (backendKey: 'original' | 'hexagonal'): void => {
  localStorage.setItem('activeBackend', backendKey);
  // Trigger reload to apply new backend
  window.location.reload();
};

// Export current backend for backward compatibility
export const CURRENT_BACKEND = getActiveBackend();
export const API_BASE_URL = CURRENT_BACKEND.apiUrl;
export const WS_URL = CURRENT_BACKEND.wsUrl;
